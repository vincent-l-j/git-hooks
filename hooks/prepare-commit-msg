#!/usr/bin/env python3

"""
Git hook to automatically prefix a git commit message with an issue number
(e.g. Jira ticket number) from the current branch name.
"""

import re
import sys
from subprocess import (
    CalledProcessError,
    check_output,
    DEVNULL,
)


def main():
    commit_msg_filepath = sys.argv[1]
    try:
        branch = (
            check_output(
                ["git", "symbolic-ref", "--short", "HEAD"],
                stderr=DEVNULL,
            )
            .decode("utf-8")
            .strip()
        )
    except CalledProcessError:
        return
    conventional_commit_types = [
        "build",
        "chore",
        "ci",
        "docs",
        "feat",
        "fix",
        "infra",
        "perf",
        "refactor",
        "style",
        "test",
    ]
    regex_jira_id = r"^(\w+-\d+)"
    regex_message = (
        r"^((" + "|".join(conventional_commit_types) + r")(\([\w\s-]+\))?!?): (.*)"
    )

    branch_match = re.match(regex_jira_id, branch)
    if not branch_match:
        return

    issue_number = branch_match.group(1)
    with open(commit_msg_filepath, "r+") as f:
        commit_msg_raw = f.read()
        commit_msg_match = re.match(regex_message, commit_msg_raw)
        try:
            commit_type = commit_msg_match.group(1)
        except AttributeError:
            print("Could not find conventional commit type")
            return

        commit_msg_parsed = commit_msg_match.group(4)
        if re.match(regex_jira_id, commit_msg_parsed):
            return

        # correctly position issue_number when writing commit message
        f.seek(0, 0)
        f.write(f"{commit_type}: {issue_number} {commit_msg_parsed}")


if __name__ == "__main__":
    main()
